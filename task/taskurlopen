#!/usr/bin/env bash

set -o nounset

POSITIONAL_ARGS=()
URLS=()
NOCONFIRM=0

process_args()
{
    while [[ $# -gt 0 ]]; do
        case $1 in
            -o)
                NOCONFIRM=1
                shift
                ;;
            *)
                POSITIONAL_ARGS+=("$1")
                shift
                ;;
        esac
    done
}

parse_urlfields()
{
    local task="$1"
    local _urlfields=(jiraurl githuburl gitlaburl)
    for urlfield in ${_urlfields[@]}; do
        local _url="$(task _get "$task"."$urlfield")"
        [[ -n "$_url" ]] && URLS+=( "$_url" )
    done
}

parse_annotation()
{
    local _grep_cmd
    if [[ "$(uname -s)" == Darwin ]]; then
        if command -v ggrep &> /dev/null; then
            _grep_cmd=ggrep
        else
            echo "Needs GNU Grep, please install it via homebrew"
            exit 1
        fi
    else
        _grep_cmd=grep
    fi
    for url in $(echo "$1" | "$_grep_cmd" -oP "(?<=\s)*((https?://(www\.)?)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}|file:///|note://|task://)\b((\.*[-a-zA-Z0-9()@:%_\+~#?&//=])*)"); do
        URLS+=( "$url" )
    done
}

get_urls()
{
    parse_urlfields "$1"
    local index=1;
    local annotation=$(task _get "$1".annotations."$index".description)
    while [[ -n "$annotation" ]]; do
        parse_annotation "$annotation"
        ((index++))
        annotation=$(task _get "$1".annotations."$index".description)
    done
}

pick_to_open()
{
    local _open_cmd="urlopen"
    if [[ ${#URLS[@]} -eq 0 ]]; then
        echo "No link to open..."
        exit 1
    fi

    if (( NOCONFIRM )); then
        "$_open_cmd" "${URLS[0]}"
    elif [[ ${#URLS[@]} -eq 1 ]]; then
        read -p "Open "${URLS[0]}"? [Y/n] " -n 1 -r
        echo
        if [[ "$REPLY" =~ ^[Yy]$ ]]; then
            "$_open_cmd" "${URLS[0]}"
        fi
    else
        local index=1
        echo "Open:"
        for url in "${URLS[@]}"; do
            echo ""$index") "$url""
            ((index++))
        done
        read -r answers
        for ans in $answers; do
            if [[ "$ans" =~ ^[0-9]+$ && "$ans" -lt "$index" && "$ans" -gt 0 ]]; then
                ((ans--))
                "$_open_cmd" "${URLS["$ans"]}"
            else
                echo "Invalid index "$ans""
            fi
        done
    fi
}

process_args "$@"

for id in ${POSITIONAL_ARGS[@]}; do
    get_urls "$id"
done

pick_to_open
