#!/usr/bin/env python3

from datetime import datetime
import json
from os import getenv
from pathlib import Path
import subprocess
from sys import argv, stdin
from textwrap import wrap
from typing import cast


try:
    input_stream = stdin.buffer
except AttributeError:
    input_stream = stdin


def is_done(args):
    for arg in args:
        if 'command' in arg:
            if arg.split(':')[1] == 'done':
                return True
            else:
                return False
    return False


def main(old, new):
    today = datetime.now()
    uuid = new['uuid'].split('-')[0]
    desc = new['description']
    log_message = f"Completed task {uuid:s}: {desc:s}"
    if 'project' in new:
        log_message += f", #{new['project']}"

    daily_note = Path(getenv("ZK_NOTEBOOK_DIR", ".")) / f"daily/{today.strftime('%Y-%m-%d')}.md"
    if daily_note.is_file():
        log_message = f"{today.strftime('%I:%M %p')} - " + log_message
        log_lines = wrap(log_message, width=80, initial_indent="* ", subsequent_indent="  ")
        with open(daily_note, "a") as df:
            for line in log_lines:
                df.write(line + "\n")
    else:
        proc = subprocess.Popen(['zk', 'new', '--interactive', '--no-input', 'daily', '--print-path'],
                                text=True, stdin=subprocess.PIPE, stdout=subprocess.DEVNULL)
        proc.communicate(input=log_message)


if __name__ == "__main__":
    old = json.loads(cast(bytes, input_stream.readline()).decode('utf-8', errors='replace'))
    new = json.loads(cast(bytes, input_stream.readline()).decode('utf-8', errors='replace'))
    if is_done(argv):
        main(old, new)
    print(json.dumps(new))
