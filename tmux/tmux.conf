# TMUX CONF
#
# My tmux configuration with some sane defaults, plugin
# support, custom update-environment variables, dynamic
# dark/light theme switching. Note that for statusline
# the custom tmux-rahlir-statusline plugin (not managed by
# TPM) is needed.
# Some possible improvements:
# - https://aliquote.org/post/tmux-little-hacks
# References:
# - https://github.com/gpakosz/.tmux
#
# by Tadeas Uhlir <tadeas.uhlir@gmail.com>

###################################
###    General configuration    ###
###################################
# Enable RGB colour if running in xterm(1)
set -g default-terminal 'tmux-256color'
# Override sitm=\E[3m is only needed for italics for
# older ncurses, might not be needed
set -as terminal-overrides ',*:Tc:sitm=\E[3m'

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Vi mode
set -wg mode-keys vi

# No bells at all
set -g bell-action none

# Base index 1 for windows and panes
set -g base-index 1
set -wg pane-base-index 1

# Monitor activity on
set -wg monitor-activity on

# Widnow titles
set -g set-titles on
set -g set-titles-string '[#S:#I #h] #W'

###################################
###  Environment configuration  ###
###################################
set -g update-environment "KRB5CCNAME,SSH_ASKPASS,SSH_AUTH_SOCK,SSH_AGENT_PID,SSH_CONNECTION,SSH_CLIENT,SSH_TTY,THEMENAME,THEMEBG,BAT_THEME"

%if #{==:#{XDG_SESSION_TYPE},wayland}
set -ag update-environment "WAYLAND_DISPLAY"
%elif #{==:#{XDG_SESSION_TYPE},x11}
set -ag update-environment "XAUTHORITY,DISPLAY"
%else
set -ag update-environment "WAYLAND_DISPLAY,XAUTHORITY,DISPLAY"
%endif

# Plugin manager environment:
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$XDG_DATA_HOME/tmux/plugins"

###################################
###     Theme configuration     ###
###################################
# Note that the status line is mostly configured
# using my plugin tmux-rahlir-statusline

# Setup for dynamic background switching
set-environment -Fgh tmux_themebg "#{?THEMEBG,#{THEMEBG},dark}"
set-hook -g client-attached 'if-shell -F "#{!=:#{tmux_themebg},#{?THEMEBG,#{THEMEBG},dark}}" "run-shell $XDG_CONFIG_HOME/tmux/tmux-update-themebg"'
set-hook -ga client-attached 'if-shell -F "#{!=:#{tmux_themebg},#{?THEMEBG,#{THEMEBG},dark}}" "source $XDG_CONFIG_HOME/tmux/tmux.conf"'
set-hook -g session-created 'if-shell -F "#{!=:#{tmux_themebg},#{?THEMEBG,#{THEMEBG},dark}}" "run-shell $XDG_CONFIG_HOME/tmux/tmux-update-themebg"'
set-hook -ga session-created 'if-shell -F "#{!=:#{tmux_themebg},#{?THEMEBG,#{THEMEBG},dark}}" "source $XDG_CONFIG_HOME/tmux/tmux.conf"'

# Background dependent configurations
%if "#{==:#{THEMEBG},light}"
set -g @color-prefix brightred
set -g @color-right-emph "#d65d0e"
set -g @color-right "#fe8019"
%else
set -g @color-prefix yellow
set -g @color-right-emph "#fe8019"
set -g @color-right "#d65d0e"
%endif

# Other settings
set -g @color-left-emph brightgreen
set -g @color-left green
set -g status-left-length "80"
set -g status-left " \uebc8 #S #{separator} \U000f0a21 #I : 󱇛 #P #{separator} #{sessionsno}"
set -g status-right-length "100"
set -g status-right "\U000f035b #{memory} #{separator} \uf437 #{loadavg} #{separator} \uf102 #{uptime} #{separator} \ueab0 %d %h %y #{separator} \uf023 #H "
set -g window-status-format " #I #{window_panes}p#{?pane_in_mode, #{pane_mode},} #{?window_zoomed_flag,\ueb81 ,}#W "

# Pane borders
set -wg pane-active-border-style "fg=cyan,bg=default"
set -wg pane-border-lines double
set -wg pane-border-indicators "arrows"  # show arrows in pane borders

# Other theme configurations
set -g message-style "fg=brightgreen,bg=black,bold"
set -wg clock-mode-colour cyan
set -g display-panes-colour white
set -g display-panes-active-colour brightblue

###################################
###        Key bindings         ###
###################################
# Key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|zk|nnn|git)' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|zk|nnn|git)' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|zk|nnn|git)' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|zk|nnn|git)' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|zk|nnn|git)' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use same keybindings in copy mode
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Small window split useful for quick commands
bind / split-window -v -p 15 -c "#{pane_current_path}"

# Key to synchronize panes
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Key to toggle activity monitoring
bind e set -w monitor-activity\; display 'monitor-activity #{?monitor-activity,on,off}'

# Make next-window and previous-window keybindings repeatable
bind -r n next-window
bind -r b previous-window

# Keybinds for sending panes and swapping windows. Note that swapping is also
# done with `prefix-<` and `prefix->` keybinds
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key v command-prompt -p "swap window with:" "swap-window -t '%%'"

# Create new session
bind-key Tab command-prompt -p "new-session name:" "new-session -s '%%'"

###################################
###       Plugins section       ###
###################################
# My custom plugins
run "#{TMUX_PLUGIN_MANAGER_PATH}/tmux-rahlir-statusline/rahlir-statusline.tmux"

# TPM plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Initialize TMUX plugin manager
run "#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm"
