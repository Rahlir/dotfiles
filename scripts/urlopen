#!/bin/zsh

# urlopen script
#
# Inspired by:
# - https://github.com/gotbletu/shownotes/blob/master/urlportal.sh
# - https://github.com/mrdotx/link-handler/blob/master/link_handler.sh
# - https://github.com/sigpipe/urlview/blob/master/url_handler.sh
#
# by Tadeas Uhlir <tadeas.uhlir@gmail.com>

setopt no_unset

if [[ $(uname -s) == Darwin ]]; then
    DEFAULT=open
elif (( $+commands[xdg-open] )); then
    DEFAULT=xdg-open
else
    echo "ERROR: could not determine default URL opener"
    exit 1
fi

function imageviewer()
{
    local _url=$1
    if [[ $(uname -s) == Darwin ]]; then
        curl -s $_url | open -a Preview.app -f
    else
        if (( $+commands[imv] )); then
            curl -s $_url | imv -
        elif (( $+commands[feh] )); then
            feh $_url
        else
            $DEFAULT $_url
        fi
    fi
}

function videoviewer()
{
    local _url=$1
    if (( $+commands[mpv] && $+commands[youtube-dl] )); then
        mpv --ontop --force-window --no-terminal $_url &
    else
        $DEFAULT $_url
    fi
}

function handle_http()
{
    local _url=$1
    if [[ ${URLOPEN_DUMB:-0} == 1 ]]; then
        $DEFAULT $_url
    else
        case $_url:l in
            *.png|*.png?*|*.jpg|*.jpg?*|*.jpeg|*.jpeg?*)
                imageviewer $_url
                ;;
            *youtube.com/watch?*|*youtube.com/embed/*|*vimeo.com/video*)
                videoviewer $_url
                ;;
            *)
                $DEFAULT $_url
                ;;
        esac
    fi
}

function handle_taskwarrior()
{
    local _url=$1
    local _uuid=${_url#task://}
    if (( $(task count $_uuid) == 0 )); then
        echo "ERROR: task $_uuid does not exist"
        exit 1
    fi
    task $_uuid
}

function handle_note()
{
    local _url=$1
    local _note_path=${_url#note://}

    if (( $(zk list $_note_path --format oneline --quiet | wc -l) == 0 )); then
        echo "ERROR: note $_note_path does not exist"
        exit 1
    fi

    local _file_link="file://${ZK_NOTEBOOK_DIR:-$PWD}/${_note_path%.md}.md"
    if [[ -n ${URLOPEN_NOTESAPP:-} ]]; then
        $URLOPEN_NOTESAPP $_file_link
    elif (( $+commands[glow] )); then
        zk list $_note_path --format "{{raw-content}}" --quiet --limit 1 | glow -s ${THEMEBG:-dark} --pager
    elif (( $+commands[lynx] && $+commands[pandoc] )); then
        zk list $_note_path --format "{{raw-content}}" --quiet --limit 1 | pandoc -f gfm | lynx -stdin
    elif (( $+commands[w3m] && $+commands[pandoc] )); then
        zk list $_note_path --format "{{raw-content}}" --quiet --limit 1 | pandoc -f gfm | w3m -T text/html
    else
        $DEFAULT $_file_link
    fi
}

url=$1

scheme=${url%%:*}
case $scheme in
    (file|http(|s)))
        handle_http $url
        ;;
    task)
        handle_taskwarrior $url
        ;;
    note)
        handle_note $url
        ;;
    *)
        echo "ERROR: unknown scheme \"$scheme\""
        exit 1
        ;;
esac
